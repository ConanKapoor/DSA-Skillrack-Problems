ALGORITHM:-
STEP1 - Define MAXSIZE as 100.
STEP2 - Form a structure for stack.
        	struct stack
        	{
            		char stk[MAXSIZE];
            		int top;
        	};
STEP3 - Typedef the structure - typedef struct stack STACK; and do STACK s;
STEP4 - Initialize push and pop functions.
STEP5 - In main function, initialize s.top=-1.
STEP6 - Initialize i,length=0 as int and string and string_new of length 100 as char.
STEP7 - Read string.
STEP8 - Iterate through i=0 to strlen(string)-1 and check the conditions for push and pop-
       		if(string[i]>='A' && string[i]<='Z')
            	{
                	push(string[i]);
            	}
            	else
            	{
                	string_new[length]=pop();
                	length++;
            	}
STEP9 - Iterate through i=0 to length-1 and print string_new.
STEP10 - Form a push function with char alpha as attribute. 
            void push(char alpha)
            {
                if(s.top==(MAXSIZE-1))
                {
                    printf ("Stack is Full\n");
                    return;
                }
                else
                {
                    s.top = s.top + 1;
                    s.stk[s.top] = alpha;
                }
            }
STEP11 - Form a pop function to do pop operation.
            char pop()
            {
                char pop_alpha;
                if(s.top==-1)
                {
                    printf ("Stack is Empty\n");
                    return (s.top);
                }
                else
                {
                    pop_alpha = s.stk[s.top];
                    s.top = s.top - 1;
                }
                return(pop_alpha);
            }